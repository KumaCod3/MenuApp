<a href="/ingredienti" class="btn btn-secondary mb-3">Gestisci Ingredienti</a>
<h2 class="display-4">Le Ricette</h2>
<table id="legendTable" class="table table-bordered table-hover"> 
    <thead> 
        <th>Nome</th><th>Ingredienti</th><th>Stagione</th><th>Pasto</th>
    </thead> 
	<tbody>
	{{#each legends}} 
        <tr> 
            <td> 
                {{this/Name}}
            </td> 
            <td> 
                {{this/Ingredienti}} 
            </td>  
			<td> 
                {{this/Temperatura}}
            </td>
			<td> 
                {{this/Orario}}
            </td>			
        </tr> 
    {{/each}} 
	</tbody>
</table>

<h3 class="display-5">Aggiungi nuova ricetta:</h3>
<form id="newRecipeForm">
    <div class="form-group">
        <label for="Name">Nome Ricetta</label>
        <input type="text" class="form-control" name="Name" id="Name" required>
    </div>
	<div class="form-group" id="ingredienti-container">
    <label>Ingredienti</label>
    <div class="ingredient-input">
        <input type="text" class="form-control" id="ingrediente-display" list="lista-ingredienti" placeholder="Seleziona o scrivi un ingrediente...">
        <datalist id="lista-ingredienti"></datalist>
    </div>
    <button type="button" id="add-ingrediente" class="btn btn-secondary">Aggiungi Ingrediente</button>
    <input type="hidden" name="Ingredienti" id="Ingredienti">
</div>

    <div class="form-group form-check">
        <input type="checkbox" class="form-check-input" name="Temperatura" id="Temperatura" required>
		<label class="form-check-label" for="Temperatura">Ricetta Estiva</label>
    </div>
    <div class="form-group form-check">
        <input type="checkbox" class="form-check-input" name="Orario" id="Orario" required>
        <label class="form-check-label" for="Orario">Ricetta di Pranzo</label>
    </div>
    <button id="submitButton" class="btn btn-primary">Aggiungi</button>
</form>
<script>
    document.addEventListener("DOMContentLoaded", (event) => {
        populateIngredientsDropdown(); // Nuova funzione per caricare gli ingredienti nel <select>
		caricaTavola();
        loadTableListeners();
		const displayInput = document.getElementById("ingrediente-display");
		displayInput.addEventListener('input', updateHiddenInput);
		const addIngredienteButton = document.getElementById("add-ingrediente");
		addIngredienteButton.addEventListener("click", addIngrediente);
    });

const ingredientiMap = {};

async function populateIngredientsDropdown() {
    try {
        const response = await fetch('/ingred');
        if (response.ok) {
            const ingredienti = await response.json();
            const dataList = document.getElementById("lista-ingredienti");

            ingredienti.forEach(ingrediente => {
                const option = document.createElement("option");
                option.value = ingrediente.Name; 
                dataList.appendChild(option);
                
                ingredientiMap[ingrediente.Name] = ingrediente._id;
            });
        } else {
            console.log("Errore nel caricamento degli ingredienti.");
        }
    } catch (err) {
        console.log(`Errore nel fetch degli ingredienti: ${err}`);
    }
}

function addIngrediente() {
    const container = document.getElementById("ingredienti-container");
    const newIngredientInput = document.createElement("div");
    newIngredientInput.classList.add("ingredient-input");
    
    newIngredientInput.innerHTML = // "";
	`
		<input type="text" class="form-control" list="lista-ingredienti" placeholder="Seleziona o scrivi un ingrediente...">
        <button type="button" class="btn btn-danger remove-ingrediente">Rimuovi</button>
    `;
    
    container.appendChild(newIngredientInput);
    
    newIngredientInput.querySelector(".remove-ingrediente").addEventListener("click", () => {
        container.removeChild(newIngredientInput);
        updateHiddenInput(); 
    });
}

function updateHiddenInput() {
    const hiddenInput = document.getElementById("Ingredienti");
    const ingredientInputs = document.querySelectorAll(".ingredient-input input");
    
    const ingredientValues = Array.from(ingredientInputs).map(input => input.value).filter(val => val);
    hiddenInput.value = ingredientValues.join(",");
}


    function loadTableListeners() {
        const rows = document.querySelectorAll("#legendTable tbody tr"); 
        rows.forEach(row => {
            row.addEventListener("click", async () => {
                const recipeName = row.cells[0].textContent.trim();
                const jsonRecipeName = { 'Name': recipeName };
				//console.log("clicco: "+recipeName);
                try {
                    const fetchConfigData = {
                        method: "POST",
                        body: JSON.stringify(jsonRecipeName),
                        headers: {
							"Content-Type": "application/json"
						}
                    };

                    const response = await fetch("/DELETERicetta", fetchConfigData);
                    if(response.ok) {
                        const recipes = await response.json();
                        loadTableWithRecipes((recipes)); 
                    } else {
                        console.log("Error with the response data");
                    }
                } catch (err) {
                    console.log(`Error: ${err}`);
                }
            });
        });
    }

    // Listener per l'invio del form della nuova ricetta
document.getElementById("submitButton").addEventListener("click", async (e) => {
    e.preventDefault();

    try {
        const Name = document.getElementById("Name").value;

        // Ottieni tutti gli input degli ingredienti
        const hiddenInputs = document.querySelectorAll(".ingredient-input input"); 
        const ingredienti = Array.from(hiddenInputs).map(input => {
            const ingredienteNome = input.value;
            const ingredienteId = ingredientiMap[ingredienteNome];

            // Se l'ingrediente non esiste, usa il nome; altrimenti usa l'ID
            return ingredienteId ? ingredienteId : ingredienteNome;
        });

        console.log(Array.from(hiddenInputs));
        const Temperatura = document.getElementById("Temperatura").checked;
        const Orario = document.getElementById("Orario").checked; 

        const recipeData = {
            Name: Name,
            Ingredienti: ingredienti,
            Temperatura: Temperatura,
            Orario: Orario
        };
        console.log(JSON.stringify(recipeData));

        const fetchConfigData = {
            method: "POST",
            body: JSON.stringify(recipeData),
            headers: { "Content-Type": "application/json" }
        };
        console.log("config data: " + fetchConfigData.body);
        
        // Endpoint per creare una nuova ricetta
        const response = await fetch("/Nricetta", fetchConfigData);
        if (response.ok) {
            const recipes = await response.json();
            loadTableWithRecipes(recipes);
        } else {
            console.log("Error with the response data");
        }
    } catch (err) {
        console.log(`Error: ${err}`);
    }
});



	async function caricaTavola(){
		try {
            const recipeData = {
                Name: 'pino',
            };
			const fetchConfigData = {
                method: "POST",
                body: JSON.stringify(recipeData),
                headers: { "Content-Type": "application/json" }
            };
            const response = await fetch("/ricet", fetchConfigData);
            if(response.ok) {
                const recipes = await response.json();
                loadTableWithRecipes((recipes)); 
            } else {
                console.log("Error with the response data");
            }
        } catch (err) {
            console.log(`Error: ${err}`);
		}
    }

	async function loadTableWithRecipes(recipes) {
		const tableBody = document.querySelector("#legendTable tbody");
		tableBody.innerHTML = ""; // Clear the table

		for (const ricetta of recipes) {
			const tr = document.createElement("tr");

			const nameTd = document.createElement("td");
			nameTd.textContent = ricetta.Name;

			const ingredienteTd = document.createElement("td"); 
			const ingredientNames = await getIngNames(ricetta.Ingredienti);
		//console.log("elenco?? "+ingredientNames);
			ingredienteTd.textContent = ingredientNames.join(", "); 

			const temperaturaTd = document.createElement("td");
			temperaturaTd.textContent = ricetta.Temperatura ? 'Estate' : 'Inverno';
			
			const orarioTd = document.createElement("td");
			orarioTd.textContent = ricetta.Orario ? 'Pranzo' : 'Cena';

			tr.appendChild(nameTd);
			tr.appendChild(ingredienteTd);
			tr.appendChild(temperaturaTd);
			tr.appendChild(orarioTd);
			
			tableBody.appendChild(tr);
		}

		loadTableListeners();
		document.getElementById("newRecipeForm").reset();
	}

	async function getIngNames(ingredientIds) {
		let ingredArray=[];
	//console.log("Elenco id: "+ingredientIds);
		for (let i=0; i<ingredientIds.length;i++){
			const ingData = {
					Id: ingredientIds[i],
				};
	//console.log('HandeB cerco ID:', ingData.Id);
			const fetchConfigData = {
					method: "POST",
					body: JSON.stringify(ingData),
					headers: { "Content-Type": "application/json" }
				};
			const response = await fetch("/NomeIngr", fetchConfigData);
			if (response.ok) {
				const ingrediente = await response.json();
	//console.log("Trovato: "+ingrediente.Name);
				let nm = 'noName';
				if (ingrediente!=null){
					ingredArray.push(ingrediente.Name);
	//console.log("Array dim "+ingredArray);
				}
			} else {
console.log("Error with the response data");
			}
		}
		return ingredArray;
	}

</script>